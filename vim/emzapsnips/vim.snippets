###########################################################################
#                            SnipMate Snippets                            #
###########################################################################
snippet header
" File: ${1:`!v expand('%:t')`}
" Author: ${2:`!v g:snips_author`}
" Description: ${3}
${4:" Last Modified: `!v strftime("%B %d, %Y")`}

$0
endsnippet
snippet lastmod "set date of last modification" i
" Last Modified: `!v strftime("%B %d, %Y")`
endsnippet
snippet gvar "Global / configuration variable"
if !exists("g:${1:MyUltraImportantVar}")
	let g:$1 = ${2:"${3:<tab>}"}
endif
endsnippet
snippet guard
if exists('${1:did_`!p snip.rv = snip.fn.replace('.','_')`}') || &cp${2: || version < 700}
	finish
endif
let $1 = 1${3}
endsnippet
snippet func "Vim Function" b
" "" Func: ${1} "{{{
function! $1()
    if &${2}
        ${3}
    else
        ${4}
    endif
endfunction
" ""}}}
endsnippet
snippet f
fun ${1:function_name}(${2})
	${3:" code}
endf
endsnippet
snippet for
for ${1:needle} in ${2:haystack}
	${3:" code}
endfor
endsnippet
snippet wh
while ${1:condition}
	${2:" code}
endw
endsnippet
snippet if
if ${1:condition}
	${2:" code}
endif
endsnippet
snippet ife
if ${1:condition}
	${2}
else
	${3}
endif
endsnippet
snippet "map( (\S+))?" "Defining VIM Mappings" !br
nnoremap ${4:<silent>}`!p snip.rv = match.group(2) if match.group(1) is not None else "<leader>"`${1:define all keys} ${2:define command}${3:<CR>}
${5:vnoremap $4`!p snip.rv = match.group(2) if match.group(1) is not None else "<leader>"`$1 ${7:<ESC>}$2$3}
${6:inoremap $4`!p snip.rv = match.group(2) if match.group(1) is not None else "<localleader>"`$1 ${7:<ESC>}$2$3}
endsnippet
# vim:ft=snippets:
