#.##################
#.#.General.Snippets
#.##################
global !p
def complete(t, opts):
    if t:
        opts = [ m[len(t):] for m in opts if m.startswith(t) ]
    if len(opts) == 1:
        return opts[0]
    return "(" + '|'.join(opts) + ')'
endglobal

##############
# MATH STUFF #
##############
snippet $$ "Math Surround" i!
$$${1:${VISUAL}}$$ $0
endsnippet
snippet "->" "sign: rightarrow" ir
\rightarrow
endsnippet
snippet "<-" "sign: leftarrow" ir
\leftarrow
endsnippet
snippet "-->" "sign: rightarrow" ir
\Rightarrow
endsnippet
snippet "<--" "sign: leftarrow" ir
\Leftarrow
endsnippet
snippet eq "Equation" b
\begin{equation}
    $0
\end{equation}
endsnippet
snippet eqnn "Equation without number" b
\begin{equation*}
    $0
\end{equation*}
endsnippet
snippet eqa "Equation array" b
\begin{eqnarray}
    $1 & $2 & $0
\end{eqnarray}
endsnippet
snippet eqann "Equation array without numbers" b
\begin{eqnarray*}
    $1 & $2 & $0
\end{eqnarray*}

endsnippet
snippet frac "Fraction" w
\frac{${1:${VISUAL}}}{${2}}
endsnippet
snippet nfrac "Fraction" w
\frac{1}{n}$0
endsnippet
snippet mat "Smart Matrix"
\begin{${1:p/b/v/V/B/small}matrix}
    $0
\end{$1matrix}
endsnippet
snippet left "Brackets, Braces, Parenthesis" w
\left${1:parenth} ${2:${VISUAL:contents}} \right${1/(\()$|(\[)$|(\{)/(?1:\))(?2:\])(?3:\})/} $0
endsnippet
snippet lr( "left( right)" w
\left( ${1:${VISUAL}} \right)
endsnippet
snippet lr| "left| right|" w
\left| ${1:${VISUAL}} \right|
endsnippet
snippet lr{ "left\{ right\}" w
\left\\{ ${1:${VISUAL}} \right\\}
endsnippet
snippet lr[ "left[ right]" w
\left[ ${1:${VISUAL}} \right]
endsnippet
snippet sum "Summary" w
\\sum${1:_{${2:i=1}}^{${3:n}}} ${4}
endsnippet
snippet nsum "Summary" w
\\sum_{i=1}^{n} ${1}
endsnippet
snippet sqrt "Root Squirt" w
\sqrt${1:[${2:nth}]}{${2:${VISUAL}}}
endsnippet
snippet 1/n "One Half" i
\frac{1}{n} $0
endsnippet
snippet 1/2 "One Half" i
\frac{1}{2} $0
endsnippet
snippet 1/4 "One Quarter" i
\frac{1}{4} $0
endsnippet
snippet "([^\^])_" "subscript" r
`!p snip.rv = match.group(1)`_{${1}}
endsnippet
snippet "([^_])\^" "superscript" r
`!p snip.rv = match.group(1)`^{${1}}
endsnippet
snippet "(\^_)|(_\^)" "sub-/supscript" ir!
_{$1}^{$2}
endsnippet
